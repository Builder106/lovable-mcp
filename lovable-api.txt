{
  "openapi": "3.1.0",
  "info": {
    "title": "Lovable API",
    "description": "API Docs for [Lovable](https://lovable.dev)",
    "version": "0.0.1"
  },
  "paths": {
    "/github/callback": {
      "post": {
        "summary": "Auth Github Callback",
        "operationId": "auth_github_callback_github_callback_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GithubCallbackBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/github-webhook": {
      "post": {
        "summary": "Github Webhook",
        "operationId": "github_webhook_github_webhook_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GithubWebhookBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/config": {
      "get": {
        "summary": "Get Config",
        "operationId": "get_config_projects__project_id__config_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Patch Config",
        "operationId": "patch_config_projects__project_id__config_patch",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProjectConfigBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/config/integration": {
      "patch": {
        "summary": "Patch Config Integration",
        "operationId": "patch_config_integration_projects__project_id__config_integration_patch",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProjectConfigIntegrationBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/chat": {
      "post": {
        "summary": "Post Chat Message",
        "operationId": "post_chat_message_projects__project_id__chat_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatMessageBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/clear-history": {
      "post": {
        "summary": "Clear Project History",
        "operationId": "clear_project_history_projects__project_id__clear_history_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/client-logs": {
      "post": {
        "summary": "Post Client Log",
        "operationId": "post_client_log_projects__project_id__client_logs_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientLogBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/remix": {
      "post": {
        "summary": "Remix Project",
        "operationId": "remix_project_projects__project_id__remix_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemixBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/prompt": {
      "put": {
        "summary": "Set Project Prompt",
        "operationId": "set_project_prompt_projects__project_id__prompt_put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPromptBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Project Prompt Projects  Project Id  Prompt Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/deployments": {
      "get": {
        "summary": "Get Deployments",
        "operationId": "get_deployments_projects__project_id__deployments_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Deploy Project Endpoint",
        "operationId": "deploy_project_endpoint_projects__project_id__deployments_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/domains": {
      "get": {
        "summary": "Get Domains Route",
        "operationId": "get_domains_route_projects__project_id__domains_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Link Custom Domain",
        "operationId": "link_custom_domain_projects__project_id__domains_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDomainBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/domains/{domain}": {
      "delete": {
        "summary": "Delete Custom Domain",
        "operationId": "delete_custom_domain_projects__project_id__domains__domain__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Domain"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/revert-to-edit": {
      "post": {
        "summary": "Revert To Edit",
        "operationId": "revert_to_edit_projects__project_id__revert_to_edit_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevertToEditBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/github/transfer": {
      "post": {
        "summary": "Transfer Project",
        "operationId": "transfer_project_projects__project_id__github_transfer_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferProjectBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferProjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "summary": "Project",
        "operationId": "project_projects_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreationOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectReturn"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/magic-codes": {
      "post": {
        "summary": "Create Magic Code",
        "operationId": "create_magic_code_projects__project_id__magic_codes_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MagicCode"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Magic Codes",
        "operationId": "list_magic_codes_projects__project_id__magic_codes_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MagicCode"
                  },
                  "title": "Response List Magic Codes Projects  Project Id  Magic Codes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/magic-codes/{magic_code_id}/deactivate": {
      "post": {
        "summary": "Deactivate Magic Code",
        "operationId": "deactivate_magic_code_projects__project_id__magic_codes__magic_code_id__deactivate_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "magic_code_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Magic Code Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/magic-codes/{magic_code_id}/join": {
      "post": {
        "summary": "Join With Magic Code",
        "operationId": "join_with_magic_code_projects__project_id__magic_codes__magic_code_id__join_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "magic_code_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Magic Code Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/collaborators": {
      "get": {
        "summary": "List Project Collaborators",
        "operationId": "list_project_collaborators_projects__project_id__collaborators_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicProjectCollaborator"
                  },
                  "title": "Response List Project Collaborators Projects  Project Id  Collaborators Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/collaborators/{collaborator_id}/deactivate": {
      "post": {
        "summary": "Deactivate Project Collaborator",
        "operationId": "deactivate_project_collaborator_projects__project_id__collaborators__collaborator_id__deactivate_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "collaborator_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collaborator Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/featured": {
      "put": {
        "summary": "Set Project Featured",
        "operationId": "set_project_featured_projects__project_id__featured_put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFeaturedBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Project Featured Projects  Project Id  Featured Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/chat/{message_id}/cancel": {
      "post": {
        "summary": "Cancel Chat Message",
        "operationId": "cancel_chat_message_projects__project_id__chat__message_id__cancel_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Message Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/handle_errors": {
      "post": {
        "summary": "Handle Errors",
        "operationId": "handle_errors_projects__project_id__handle_errors_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HandleErrorsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/handle_error/{error_id}": {
      "post": {
        "summary": "Handle Error",
        "operationId": "handle_error_projects__project_id__handle_error__error_id__post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "error_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Error Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/report_error": {
      "post": {
        "summary": "Report Error",
        "operationId": "report_error_projects__project_id__report_error_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportErrorBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/feature_flags": {
      "get": {
        "summary": "Get User Feature Flags",
        "description": "Fetch all feature flags for the current user from PostHog.",
        "operationId": "get_user_feature_flags_user_feature_flags_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/rename": {
      "post": {
        "summary": "Rename",
        "operationId": "rename_projects__project_id__rename_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameProjectBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}": {
      "delete": {
        "summary": "Delete Project",
        "operationId": "delete_project_projects__project_id__delete",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-file-upload-url": {
      "post": {
        "summary": "Generate Upload Url",
        "operationId": "generate_upload_url_generate_file_upload_url_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadUrlParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-file-download-url": {
      "post": {
        "summary": "Generate Download Url",
        "operationId": "generate_download_url_generate_file_download_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadUrlParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate-file-public-url": {
      "post": {
        "summary": "Generate Public Url",
        "description": "Generates a publicly accessible URL for a file in the storage bucket.\nNote: This assumes the object's ACL allows public reads.",
        "operationId": "generate_public_url_generate_file_public_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicUrlParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/repo-accessibility": {
      "get": {
        "summary": "Get Repo Accessibility",
        "operationId": "get_repo_accessibility_projects__project_id__repo_accessibility_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepoAccessibilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/feedback": {
      "post": {
        "summary": "Set Feedback",
        "operationId": "set_feedback_projects__project_id__feedback_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/sandbox/start": {
      "post": {
        "summary": "Start Sandbox",
        "operationId": "start_sandbox_projects__project_id__sandbox_start_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "user_initiated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "User Initiated"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/github-installations": {
      "get": {
        "summary": "List Github Installations",
        "operationId": "list_github_installations_github_installations_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GithubInstallationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/github-repositories": {
      "get": {
        "summary": "List Github Repositories",
        "operationId": "list_github_repositories_github_repositories_get",
        "parameters": [
          {
            "name": "github_owner",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Github Owner"
            }
          },
          {
            "name": "github_owner_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GithubOwnerType"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/visibility": {
      "put": {
        "summary": "Set Project Visibility",
        "operationId": "set_project_visibility_projects__project_id__visibility_put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetVisibilityBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Project Visibility Projects  Project Id  Visibility Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "summary": "Update User Data",
        "operationId": "update_user_data_user_put",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDataBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/verify-email": {
      "post": {
        "summary": "Verify User Email",
        "operationId": "verify_user_email_user_verify_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyUserEmailBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/username": {
      "put": {
        "summary": "Update Username",
        "operationId": "update_username_user_username_put",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsernameBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/segmentation": {
      "post": {
        "summary": "Set User Segmentation",
        "operationId": "set_user_segmentation_user_segmentation_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSegmentationData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/check-name": {
      "get": {
        "summary": "Is Name Available",
        "operationId": "is_name_available_projects_check_name_get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameCheckResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/openai/chat/completions": {
      "post": {
        "summary": "Oai Completion",
        "operationId": "oai_completion_openai_chat_completions_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "healthcheck"
        ],
        "summary": "Perform a Health Check",
        "description": "## Perform a Health Check\nEndpoint to perform a healthcheck on. This endpoint can primarily be used Docker\nto ensure a robust container orchestration and management is in place. Other\nservices which rely on proper functioning of the API service will not deploy if this\nendpoint returns any other HTTP status code except 200 (OK).\nReturns:\n    HealthCheck: Returns a JSON response with the health status",
        "operationId": "get_health_health_get",
        "responses": {
          "200": {
            "description": "Return HTTP Status Code 200 (OK)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            }
          }
        }
      }
    },
    "/test-error-f47ac10b-58cc-4372-a567-0e02b2c3d479/{test}": {
      "get": {
        "summary": "Test Error",
        "description": "## Test Error\nEndpoint to test error handling. This endpoint can primarily be used to test error handling for logging and observability.\nReturns:\n    None",
        "operationId": "trigger_error_test_error_f47ac10b_58cc_4372_a567_0e02b2c3d479__test__get",
        "parameters": [
          {
            "name": "test",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Test"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Return HTTP Status Code 500 (Internal Server Error)",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/import": {
      "post": {
        "summary": "Project",
        "operationId": "project_import_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportProjectReturn"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{username}": {
      "get": {
        "summary": "Get Public Profile",
        "operationId": "get_public_profile_profile__username__get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicProfile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/custom_instructions": {
      "put": {
        "summary": "Set Custom Instructions",
        "operationId": "set_custom_instructions_projects__project_id__custom_instructions_put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomInstructionsBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Custom Instructions Projects  Project Id  Custom Instructions Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/branches": {
      "get": {
        "summary": "Get Branches Route",
        "operationId": "get_branches_route_projects__project_id__branches_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Branches Route Projects  Project Id  Branches Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/branches/switch": {
      "post": {
        "summary": "Switch Branch",
        "description": "Switches the current branch of a project to the specified branch.\nIf the branch does not exist, it will be created. When creating a branch, base_branch must be specified.",
        "operationId": "switch_branch_projects__project_id__branches_switch_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchBranchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/llm_name": {
      "put": {
        "summary": "Set Project Llm Name",
        "operationId": "set_project_llm_name_projects__project_id__llm_name_put",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLlmNameBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Set Project Llm Name Projects  Project Id  Llm Name Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/supabase/oauth/callback": {
      "post": {
        "summary": "Supabase Oauth Callback",
        "operationId": "supabase_oauth_callback_supabase_oauth_callback_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthCallbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/supabase/organizations": {
      "get": {
        "summary": "Supabase Organizations",
        "operationId": "supabase_organizations_supabase_organizations_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SupabaseOrganization"
                  },
                  "title": "Response Supabase Organizations Supabase Organizations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/supabase/disconnect": {
      "post": {
        "summary": "Disconnect Supabase Project Endpoint",
        "operationId": "disconnect_supabase_project_endpoint_projects__project_id__supabase_disconnect_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/supabase/secrets": {
      "post": {
        "summary": "Set Supabase Secrets",
        "description": "Set secrets for a project's Supabase Edge Functions",
        "operationId": "set_supabase_secrets_projects__project_id__supabase_secrets_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSecretsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/supabase/secrets/names": {
      "get": {
        "summary": "Get Supabase Secret Names",
        "description": "Get secret names for a project's Supabase Edge Functions",
        "operationId": "get_supabase_secret_names_projects__project_id__supabase_secrets_names_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/signup-codes/use/{code}": {
      "post": {
        "summary": "Use Signup Code",
        "operationId": "use_signup_code_signup_codes_use__code__post",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Use Signup Code Signup Codes Use  Code  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/signup-codes/check/{code}": {
      "get": {
        "summary": "Check Signup Code",
        "description": "Check if a signup code is valid without consuming it.\nUsed for showing immediate feedback in the referral system.",
        "operationId": "check_signup_code_signup_codes_check__code__get",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stripe/create-portal-session": {
      "post": {
        "summary": "Create Stripe Portal Session",
        "description": "Creates a Stripe customer portal session.\n\nArgs:\n    body: The portal session request containing the return URL and optional workspace_id\n    user_id: The authenticated user's ID\n\nReturns:\n    The portal session URL",
        "operationId": "create_stripe_portal_session_stripe_create_portal_session_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripePortalSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stripe/checkout": {
      "post": {
        "summary": "Create Stripe Checkout",
        "description": "Creates a Stripe checkout session for buying a product.\n\nArgs:\n    body: The checkout request containing the product ID to buy and the quantity.\n    user_id: The authenticated user's ID\n\nReturns:\n    The checkout session URL",
        "operationId": "create_stripe_checkout_stripe_checkout_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripeCheckoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/featurebase/sso/callback": {
      "get": {
        "summary": "Get Featurebase Sso Jwt",
        "operationId": "get_featurebase_sso_jwt_featurebase_sso_callback_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Featurebase Sso Jwt Featurebase Sso Callback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lovable-launched/sso/callback": {
      "get": {
        "summary": "Get Lovable Launched Sso Jwt",
        "operationId": "get_lovable_launched_sso_jwt_lovable_launched_sso_callback_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Lovable Launched Sso Jwt Lovable Launched Sso Callback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/badge/visibility": {
      "post": {
        "summary": "Toggle Badge Visibility",
        "operationId": "toggle_badge_visibility_projects__project_id__badge_visibility_post",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleBadgeVisibilityBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleBadgeVisibilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Badge Visibility",
        "operationId": "get_badge_visibility_projects__project_id__badge_visibility_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authorization"
            }
          },
          {
            "name": "token",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleBadgeVisibilityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessLevel": {
        "type": "string",
        "enum": [
          "admin",
          "write",
          "read",
          "none"
        ],
        "title": "AccessLevel"
      },
      "ChangedRepository": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/NameChange"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ChangedRepository"
      },
      "Changes": {
        "properties": {
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChangedRepository"
              },
              {
                "type": "null"
              }
            ]
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OwnerChange"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Changes"
      },
      "ChatMessageBody": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "images": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatMessageImageInput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Images",
            "default": []
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectMode"
              },
              {
                "type": "null"
              }
            ],
            "default": "instant"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "default": []
          },
          "contains_error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contains Error",
            "default": false
          },
          "error_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Ids",
            "default": []
          },
          "current_page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Page"
          },
          "client_logs": {
            "items": {
              "$ref": "#/components/schemas/TmpClientLog"
            },
            "type": "array",
            "title": "Client Logs",
            "default": []
          },
          "network_requests": {
            "items": {
              "$ref": "#/components/schemas/TmpNetworkRequest"
            },
            "type": "array",
            "title": "Network Requests",
            "default": []
          },
          "runtime_errors": {
            "items": {
              "$ref": "#/components/schemas/TmpRuntimeError"
            },
            "type": "array",
            "title": "Runtime Errors",
            "default": []
          },
          "benchmark_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Benchmark Id"
          },
          "integrate_supabase_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrate Supabase Project Id"
          },
          "integrate_supabase_org_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Integrate Supabase Org Id"
          },
          "selected_elements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SelectedElement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Elements"
          },
          "run_sql_in_message_with_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Sql In Message With Id"
          },
          "project_migration_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "missing-gpt-engineer-script",
                    "outdated-lovable-tagger",
                    "missing-component-tagger",
                    "missing-lovable-tagger",
                    "supabase-auth-bad-deps"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Migration Ids"
          },
          "chat_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Only",
            "default": false
          },
          "builder_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Builder Token"
          },
          "agent_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Mode"
          },
          "session_replay": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Replay"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChatMessageBody"
      },
      "ChatMessageImageInput": {
        "properties": {
          "image_id": {
            "type": "string",
            "title": "Image Id"
          },
          "type": {
            "$ref": "#/components/schemas/ReactMessageImageType"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "type"
        ],
        "title": "ChatMessageImageInput"
      },
      "ClientLogBody": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "logged_at": {
            "type": "string",
            "format": "date-time",
            "title": "Logged At"
          },
          "level": {
            "type": "string",
            "enum": [
              "info",
              "error",
              "warning"
            ],
            "title": "Level"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "message",
          "logged_at",
          "level"
        ],
        "title": "ClientLogBody"
      },
      "Config-Input": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "paths": {
            "$ref": "#/components/schemas/_PathsConfig"
          },
          "run": {
            "$ref": "#/components/schemas/_RunConfig"
          },
          "dev_server": {
            "$ref": "#/components/schemas/_DevServerConfig"
          },
          "integrations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/_IntegrationConfig"
            },
            "type": "object",
            "title": "Integrations"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "Config-Output": {
        "properties": {
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "paths": {
            "$ref": "#/components/schemas/_PathsConfig"
          },
          "run": {
            "$ref": "#/components/schemas/_RunConfig"
          },
          "dev_server": {
            "$ref": "#/components/schemas/_DevServerConfig"
          },
          "integrations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/_IntegrationConfig"
            },
            "type": "object",
            "title": "Integrations"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "CreateProjectReturn": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "channel_id": {
            "type": "string",
            "title": "Channel Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "link",
          "channel_id"
        ],
        "title": "CreateProjectReturn"
      },
      "CreateStripeCheckoutRequest": {
        "properties": {
          "product_id": {
            "type": "string",
            "title": "Product Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity",
            "default": 1
          },
          "cancel_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancel Url"
          },
          "success_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success Url"
          },
          "client_reference_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Reference Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "product_id"
        ],
        "title": "CreateStripeCheckoutRequest",
        "description": "Request model for creating buying a product"
      },
      "CreateStripePortalSessionRequest": {
        "properties": {
          "return_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Url"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "title": "CreateStripePortalSessionRequest",
        "description": "Request model for creating a portal session"
      },
      "CreationOptions": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "tech_stack": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tech Stack"
          },
          "llm_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Name"
          },
          "prompt_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Name"
          },
          "custom_instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Instructions"
          },
          "openapi_schema_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openapi Schema Url"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectMode"
              },
              {
                "type": "null"
              }
            ],
            "default": "instant"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility",
            "default": "public"
          },
          "benchmark_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Benchmark Id"
          },
          "skip_reviews": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Reviews",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "description"
        ],
        "title": "CreationOptions"
      },
      "DatabaseInfo": {
        "properties": {
          "host": {
            "type": "string",
            "title": "Host"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "postgres_engine": {
            "type": "string",
            "title": "Postgres Engine"
          },
          "release_channel": {
            "type": "string",
            "title": "Release Channel"
          }
        },
        "type": "object",
        "required": [
          "host",
          "version",
          "postgres_engine",
          "release_channel"
        ],
        "title": "DatabaseInfo"
      },
      "DeleteProjectResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "deleting_repo": {
            "type": "boolean",
            "title": "Deleting Repo"
          }
        },
        "type": "object",
        "required": [
          "success",
          "deleting_repo"
        ],
        "title": "DeleteProjectResponse"
      },
      "DownloadUrlParams": {
        "properties": {
          "dir_name": {
            "type": "string",
            "title": "Dir Name"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          }
        },
        "type": "object",
        "required": [
          "dir_name",
          "file_name"
        ],
        "title": "DownloadUrlParams"
      },
      "ElementContent": {
        "properties": {
          "className": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Classname"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "placeholder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Placeholder"
          }
        },
        "type": "object",
        "title": "ElementContent"
      },
      "ErrorType": {
        "type": "string",
        "enum": [
          "immediate_runtime",
          "runtime",
          "build",
          "deploy_supabase_functions",
          "http_client_error",
          "cors_error",
          "http_server_error",
          "no_code_change",
          "code_diff",
          "file_edited_without_permission",
          "excluded_file_edited",
          "supabase_edge_function_error",
          "dependency_install",
          "supabase_sql_error",
          "search_replace_failed",
          "search_replace_missing_file",
          "changed_missing_file"
        ],
        "title": "ErrorType"
      },
      "FeatureFlagsResponse": {
        "properties": {
          "collaboration": {
            "type": "boolean",
            "title": "Collaboration",
            "default": false
          },
          "custom_domains": {
            "type": "boolean",
            "title": "Custom Domains",
            "default": false
          },
          "teams": {
            "type": "boolean",
            "title": "Teams",
            "default": false
          }
        },
        "type": "object",
        "title": "FeatureFlagsResponse"
      },
      "FeedbackBody": {
        "properties": {
          "edit_id": {
            "type": "string",
            "title": "Edit Id"
          },
          "feedback": {
            "type": "string",
            "enum": [
              "positive",
              "negative"
            ],
            "title": "Feedback"
          }
        },
        "type": "object",
        "required": [
          "edit_id",
          "feedback"
        ],
        "title": "FeedbackBody"
      },
      "GithubAccount": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "login",
          "avatar_url"
        ],
        "title": "GithubAccount"
      },
      "GithubCallbackBody": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "GithubCallbackBody"
      },
      "GithubInstallation": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/GithubAccount"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "target_type": {
            "$ref": "#/components/schemas/GithubOwnerType"
          },
          "html_url": {
            "type": "string",
            "title": "Html Url"
          }
        },
        "type": "object",
        "required": [
          "account",
          "created_at",
          "target_type",
          "html_url"
        ],
        "title": "GithubInstallation"
      },
      "GithubInstallationsResponse": {
        "properties": {
          "installations": {
            "items": {
              "$ref": "#/components/schemas/GithubInstallation"
            },
            "type": "array",
            "title": "Installations"
          },
          "has_access_token": {
            "type": "boolean",
            "title": "Has Access Token"
          },
          "has_valid_access_token": {
            "type": "boolean",
            "title": "Has Valid Access Token"
          }
        },
        "type": "object",
        "required": [
          "installations",
          "has_access_token",
          "has_valid_access_token"
        ],
        "title": "GithubInstallationsResponse"
      },
      "GithubOwner": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "$ref": "#/components/schemas/GithubOwnerType"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "title": "GithubOwner"
      },
      "GithubOwnerType": {
        "type": "string",
        "enum": [
          "User",
          "Organization"
        ],
        "title": "GithubOwnerType"
      },
      "GithubWebhookBody": {
        "properties": {
          "action": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action"
          },
          "changes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Changes"
              },
              {
                "type": "null"
              }
            ]
          },
          "before": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Before"
          },
          "after": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "After"
          },
          "ref": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ref"
          },
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Repository"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "GithubWebhookBody"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HandleErrorsBody": {
        "properties": {
          "error_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Error Ids"
          }
        },
        "type": "object",
        "required": [
          "error_ids"
        ],
        "title": "HandleErrorsBody"
      },
      "HealthCheck": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "OK"
          }
        },
        "type": "object",
        "title": "HealthCheck",
        "description": "Response model to validate and return when performing a health check."
      },
      "ImportOptions": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "github_owner": {
            "$ref": "#/components/schemas/GithubOwner"
          },
          "project_config": {
            "$ref": "#/components/schemas/Config-Input"
          },
          "github_repo_name": {
            "type": "string",
            "title": "Github Repo Name"
          },
          "main_branch": {
            "type": "string",
            "title": "Main Branch",
            "default": "main"
          }
        },
        "type": "object",
        "required": [
          "name",
          "github_owner",
          "project_config",
          "github_repo_name"
        ],
        "title": "ImportOptions"
      },
      "ImportProjectReturn": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "link": {
            "type": "string",
            "title": "Link"
          },
          "channel_id": {
            "type": "string",
            "title": "Channel Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "link",
          "channel_id"
        ],
        "title": "ImportProjectReturn"
      },
      "LinkDomainBody": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ],
        "title": "LinkDomainBody"
      },
      "MagicCode": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "deactivated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deactivated At"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "expiry_seconds": {
            "type": "integer",
            "title": "Expiry Seconds"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "expiry_seconds"
        ],
        "title": "MagicCode"
      },
      "NameChange": {
        "properties": {
          "from": {
            "type": "string",
            "title": "From"
          }
        },
        "type": "object",
        "required": [
          "from"
        ],
        "title": "NameChange"
      },
      "NameCheckResponse": {
        "properties": {
          "available": {
            "type": "boolean",
            "title": "Available"
          },
          "suggestion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggestion"
          }
        },
        "type": "object",
        "required": [
          "available",
          "suggestion"
        ],
        "title": "NameCheckResponse"
      },
      "NetworkRequestError": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "stack": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stack"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "NetworkRequestError",
        "description": "Error details for failed network requests"
      },
      "OAuthCallbackRequest": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "codeVerifier": {
            "type": "string",
            "title": "Codeverifier"
          },
          "redirect_uri": {
            "type": "string",
            "title": "Redirect Uri"
          }
        },
        "type": "object",
        "required": [
          "code",
          "state",
          "codeVerifier",
          "redirect_uri"
        ],
        "title": "OAuthCallbackRequest"
      },
      "OrganizationOrUser": {
        "properties": {
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Owner"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "OrganizationOrUser"
      },
      "Owner": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GithubOwnerType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "login",
          "id"
        ],
        "title": "Owner"
      },
      "OwnerChange": {
        "properties": {
          "from": {
            "$ref": "#/components/schemas/OrganizationOrUser"
          }
        },
        "type": "object",
        "required": [
          "from"
        ],
        "title": "OwnerChange"
      },
      "PatchProjectConfigBody": {
        "properties": {
          "commit_message": {
            "type": "string",
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": [
          "commit_message"
        ],
        "title": "PatchProjectConfigBody"
      },
      "PatchProjectConfigIntegrationBody": {
        "properties": {
          "integration": {
            "$ref": "#/components/schemas/_IntegrationConfig"
          },
          "remove": {
            "type": "boolean",
            "title": "Remove",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "integration"
        ],
        "title": "PatchProjectConfigIntegrationBody"
      },
      "ProjectMode": {
        "type": "string",
        "enum": [
          "agent",
          "instant"
        ],
        "title": "ProjectMode"
      },
      "ProjectStatus": {
        "type": "string",
        "enum": [
          "ACTIVE_HEALTHY",
          "ACTIVE_UNHEALTHY",
          "COMING_UP",
          "GOING_DOWN",
          "INACTIVE",
          "INIT_FAILED",
          "REMOVED",
          "RESTARTING",
          "UNKNOWN",
          "UPGRADING",
          "PAUSING",
          "RESTORING",
          "RESTORE_FAILED",
          "PAUSE_FAILED"
        ],
        "title": "ProjectStatus"
      },
      "PublicProfile": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserAttributes"
              },
              {
                "type": "null"
              }
            ]
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "PublicProfile"
      },
      "PublicProjectCollaborator": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "access_level": {
            "$ref": "#/components/schemas/AccessLevel"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "access_level",
          "email",
          "display_name",
          "username"
        ],
        "title": "PublicProjectCollaborator"
      },
      "PublicUrlParams": {
        "properties": {
          "dir_name": {
            "type": "string",
            "title": "Dir Name"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          }
        },
        "type": "object",
        "required": [
          "dir_name",
          "file_name"
        ],
        "title": "PublicUrlParams"
      },
      "ReactMessageImageType": {
        "type": "string",
        "enum": [
          "user_upload",
          "iframe_snapshot"
        ],
        "title": "ReactMessageImageType"
      },
      "RemixBody": {
        "properties": {
          "prompt_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Name"
          },
          "benchmark_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Benchmark Id"
          },
          "skip_reviews": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skip Reviews"
          },
          "include_history": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include History",
            "default": false
          }
        },
        "type": "object",
        "title": "RemixBody"
      },
      "RenameProjectBody": {
        "properties": {
          "desired_name": {
            "type": "string",
            "title": "Desired Name"
          },
          "rename_repository": {
            "type": "boolean",
            "title": "Rename Repository",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "desired_name"
        ],
        "title": "RenameProjectBody"
      },
      "RepoAccessibilityResponse": {
        "properties": {
          "accessibility": {
            "type": "string",
            "enum": [
              "repo_accessible",
              "repo_not_accessible",
              "installation_not_found",
              "installation_suspended",
              "repo_not_found",
              "insufficient_permissions"
            ],
            "title": "Accessibility"
          }
        },
        "type": "object",
        "required": [
          "accessibility"
        ],
        "title": "RepoAccessibilityResponse"
      },
      "ReportErrorBody": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "title": "Occurred At"
          },
          "error_type": {
            "$ref": "#/components/schemas/ErrorType",
            "default": "runtime"
          },
          "meta_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta Data"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ReportErrorBody"
      },
      "Repository": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "owner": {
            "$ref": "#/components/schemas/Owner"
          }
        },
        "type": "object",
        "required": [
          "name",
          "full_name",
          "owner"
        ],
        "title": "Repository"
      },
      "RevertToEditBody": {
        "properties": {
          "edit_id": {
            "type": "string",
            "title": "Edit Id"
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "default": false
          },
          "via_undo": {
            "type": "boolean",
            "title": "Via Undo",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "edit_id"
        ],
        "title": "RevertToEditBody"
      },
      "SecretPair": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "SecretPair"
      },
      "SelectedElement": {
        "properties": {
          "filePath": {
            "type": "string",
            "title": "Filepath"
          },
          "fileName": {
            "type": "string",
            "title": "Filename"
          },
          "elementType": {
            "type": "string",
            "title": "Elementtype"
          },
          "lineNumber": {
            "type": "integer",
            "title": "Linenumber"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ElementContent"
              },
              {
                "type": "null"
              }
            ]
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SelectedElement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          }
        },
        "type": "object",
        "required": [
          "filePath",
          "fileName",
          "elementType",
          "lineNumber"
        ],
        "title": "SelectedElement"
      },
      "SetCustomInstructionsBody": {
        "properties": {
          "custom_instructions": {
            "type": "string",
            "title": "Custom Instructions"
          }
        },
        "type": "object",
        "required": [
          "custom_instructions"
        ],
        "title": "SetCustomInstructionsBody"
      },
      "SetFeaturedBody": {
        "properties": {
          "featured": {
            "type": "boolean",
            "title": "Featured"
          }
        },
        "type": "object",
        "required": [
          "featured"
        ],
        "title": "SetFeaturedBody"
      },
      "SetLlmNameBody": {
        "properties": {
          "llm_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Name"
          }
        },
        "type": "object",
        "title": "SetLlmNameBody"
      },
      "SetPromptBody": {
        "properties": {
          "prompt_name": {
            "type": "string",
            "title": "Prompt Name"
          }
        },
        "type": "object",
        "required": [
          "prompt_name"
        ],
        "title": "SetPromptBody"
      },
      "SetSecretsRequest": {
        "properties": {
          "secrets": {
            "items": {
              "$ref": "#/components/schemas/SecretPair"
            },
            "type": "array",
            "title": "Secrets"
          }
        },
        "type": "object",
        "required": [
          "secrets"
        ],
        "title": "SetSecretsRequest"
      },
      "SetVisibilityBody": {
        "properties": {
          "visibility": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          }
        },
        "type": "object",
        "required": [
          "visibility"
        ],
        "title": "SetVisibilityBody"
      },
      "SupabaseOrganization": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/SupabaseProject"
            },
            "type": "array",
            "title": "Projects"
          },
          "status": {
            "type": "string",
            "enum": [
              "connected",
              "failed"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "projects",
          "status"
        ],
        "title": "SupabaseOrganization"
      },
      "SupabaseProject": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "region": {
            "type": "string",
            "title": "Region"
          },
          "status": {
            "$ref": "#/components/schemas/ProjectStatus"
          },
          "database": {
            "$ref": "#/components/schemas/DatabaseInfo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "name",
          "region",
          "status",
          "database",
          "created_at"
        ],
        "title": "SupabaseProject"
      },
      "SwitchBranchRequest": {
        "properties": {
          "branch_name": {
            "type": "string",
            "title": "Branch Name"
          },
          "base_branch": {
            "type": "string",
            "title": "Base Branch",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "branch_name"
        ],
        "title": "SwitchBranchRequest"
      },
      "TmpClientLog": {
        "properties": {
          "logged_at": {
            "type": "string",
            "format": "date-time",
            "title": "Logged At"
          },
          "level": {
            "type": "string",
            "title": "Level"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "logged_at",
          "level",
          "message"
        ],
        "title": "TmpClientLog",
        "description": "A temporary client log that is used to send console logs to the LLM. Will be persisted to the database once the LLM has finished processing it."
      },
      "TmpNetworkRequest": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "method": {
            "type": "string",
            "title": "Method"
          },
          "status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "statusText": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Statustext"
          },
          "responseBody": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Responsebody"
          },
          "requestBody": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requestbody"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "duration_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Ms"
          },
          "origin": {
            "type": "string",
            "title": "Origin"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers",
            "default": {

            }
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NetworkRequestError"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "url",
          "method",
          "timestamp",
          "origin"
        ],
        "title": "TmpNetworkRequest",
        "description": "A temporary network request log that tracks HTTP requests made within the preview iframe.\nThis includes both successful and failed requests, providing context about network activity in the user's application."
      },
      "TmpRuntimeError": {
        "properties": {
          "error_type": {
            "type": "string",
            "title": "Error Type"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "lineno": {
            "type": "integer",
            "title": "Lineno"
          },
          "colno": {
            "type": "integer",
            "title": "Colno"
          },
          "stack": {
            "type": "string",
            "title": "Stack"
          }
        },
        "type": "object",
        "required": [
          "error_type",
          "message",
          "filename",
          "lineno",
          "colno",
          "stack"
        ],
        "title": "TmpRuntimeError",
        "description": "A temporary runtime error that is used to send runtime errors to the LLM."
      },
      "ToggleBadgeVisibilityBody": {
        "properties": {
          "hide_badge": {
            "type": "boolean",
            "title": "Hide Badge"
          }
        },
        "type": "object",
        "required": [
          "hide_badge"
        ],
        "title": "ToggleBadgeVisibilityBody"
      },
      "ToggleBadgeVisibilityResponse": {
        "properties": {
          "hide_badge": {
            "type": "boolean",
            "title": "Hide Badge"
          }
        },
        "type": "object",
        "required": [
          "hide_badge"
        ],
        "title": "ToggleBadgeVisibilityResponse"
      },
      "TransferProjectBody": {
        "properties": {
          "new_owner": {
            "$ref": "#/components/schemas/GithubOwner"
          },
          "new_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "new_owner"
        ],
        "title": "TransferProjectBody"
      },
      "TransferProjectResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "new_repo_name": {
            "type": "string",
            "title": "New Repo Name"
          }
        },
        "type": "object",
        "required": [
          "status",
          "new_repo_name"
        ],
        "title": "TransferProjectResponse"
      },
      "UpdateUserDataBody": {
        "properties": {
          "default_project_visibility": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "public",
                  "private"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Project Visibility"
          },
          "analytics_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytics Enabled"
          },
          "attributes": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserAttributes"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UpdateUserDataBody"
      },
      "UpdateUsernameBody": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "UpdateUsernameBody"
      },
      "UploadUrlParams": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "pending"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "content_type"
        ],
        "title": "UploadUrlParams"
      },
      "UserAttributes": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link"
          },
          "hide_profile_pictures": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hide Profile Pictures",
            "default": false
          }
        },
        "type": "object",
        "title": "UserAttributes"
      },
      "UserSegmentationData": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "company_size": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Size"
          },
          "coding_experience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coding Experience"
          },
          "build_goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build Goal"
          },
          "heard_from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Heard From"
          },
          "form_status": {
            "$ref": "#/components/schemas/UserSegmentationFormStatus"
          }
        },
        "type": "object",
        "required": [
          "form_status"
        ],
        "title": "UserSegmentationData"
      },
      "UserSegmentationFormStatus": {
        "type": "string",
        "enum": [
          "submitted",
          "skipped",
          "not_shown"
        ],
        "title": "UserSegmentationFormStatus"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerifyUserEmailBody": {
        "properties": {
          "oob_code": {
            "type": "string",
            "title": "Oob Code"
          },
          "api_key": {
            "type": "string",
            "title": "Api Key"
          }
        },
        "type": "object",
        "required": [
          "oob_code",
          "api_key"
        ],
        "title": "VerifyUserEmailBody"
      },
      "_DevServerConfig": {
        "properties": {
          "port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Port"
          }
        },
        "type": "object",
        "title": "_DevServerConfig"
      },
      "_IntegrationConfig": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "default": ""
          },
          "input_prompt": {
            "type": "string",
            "title": "Input Prompt",
            "default": ""
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/_IntegrationResource"
            },
            "type": "array",
            "title": "Resources"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Parameters"
          },
          "context_prompt": {
            "type": "string",
            "title": "Context Prompt",
            "default": ""
          }
        },
        "type": "object",
        "title": "_IntegrationConfig"
      },
      "_IntegrationResource": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "id",
          "url",
          "path",
          "error"
        ],
        "title": "_IntegrationResource"
      },
      "_PathsConfig": {
        "properties": {
          "base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base"
          },
          "src": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Src"
          },
          "dist": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dist"
          }
        },
        "type": "object",
        "title": "_PathsConfig"
      },
      "_RunConfig": {
        "properties": {
          "install": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Install"
          },
          "build": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Build"
          },
          "test": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test"
          },
          "dev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dev"
          },
          "lint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lint"
          },
          "format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          }
        },
        "type": "object",
        "title": "_RunConfig"
      }
    }
  }
}