openapi: 3.0.0
info:
  title: Lovable MCP API
  description: API specification for the Lovable Model Context Protocol server
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Development server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    ComponentType:
      type: string
      enum: [button, form, card, dialog, table]

    UIComponent:
      type: object
      required:
        - type
        - props
      properties:
        type:
          $ref: '#/components/schemas/ComponentType'
        props:
          type: object
        styles:
          type: object
        accessibility:
          type: object

    DesignPattern:
      type: object
      required:
        - pattern_type
        - context
      properties:
        pattern_type:
          type: string
        context:
          type: object
        constraints:
          type: array
          items:
            type: string

    BugDetectionRequest:
      type: object
      required:
        - code
        - context
      properties:
        code:
          type: string
        context:
          type: object

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]

    ErrorResponse:
      type: object
      properties:
        error:
          type: string

security:
  - ApiKeyAuth: []

paths:
  /generate_component:
    post:
      summary: Generate a UI component
      description: Creates a new UI component based on the provided specifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UIComponent'
      responses:
        '200':
          description: Component generated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      component:
                        $ref: '#/components/schemas/UIComponent'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - API key missing or invalid
        '429':
          description: Too many requests
        '500':
          description: Server error

  /apply_pattern:
    post:
      summary: Apply a design pattern
      description: Applies a design pattern to the given context
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignPattern'
      responses:
        '200':
          description: Pattern applied successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      pattern:
                        $ref: '#/components/schemas/DesignPattern'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - API key missing or invalid
        '429':
          description: Too many requests
        '500':
          description: Server error

  /detect_bugs:
    post:
      summary: Detect UI/UX issues
      description: Analyzes code for potential UI/UX issues and suggests fixes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BugDetectionRequest'
      responses:
        '200':
          description: Bug detection completed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      issues:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            description:
                              type: string
                            fix_suggestion:
                              type: string
                            auto_fixable:
                              type: boolean
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - API key missing or invalid
        '429':
          description: Too many requests
        '500':
          description: Server error
